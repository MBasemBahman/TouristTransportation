@model CompanyTripBookingDto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.emptyLayout = true;
}
<div class="modal-header">
    <h5 class="modal-title" id="exampleModalScrollableTitle">@Localizer.Get("CompanyTripBooking")</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>
<div class="modal-body">

    <div class="row">
        <div class="col-xl-7 col-12">
            <dl class="row mb-0">
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.CompanyTrip):</dt>
                <dd class="col-sm-8 mb-1">@Model.CompanyTrip.Title</dd>
                
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.Currency):</dt>
                <dd class="col-sm-8 mb-1">@Model.Currency.Name</dd>
                
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.CurrencyRate):</dt>
                <dd class="col-sm-8 mb-1">@Model.CurrencyRate</dd>
            
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.CompanyTripBookingState):</dt>
                <dd class="col-sm-8 mb-1">
                    @if (Model.CompanyTripBookingState.ColorCode != "#fff" && Model.CompanyTripBookingState.ColorCode != "#ffff" && !string.IsNullOrEmpty(Model.CompanyTripBookingState.ColorCode))
                    {
                        <span class="badge px-2 text-center" style="background-color:@Model.CompanyTripBookingState.ColorCode;color:white">@Model.CompanyTripBookingState.Name</span>
                    }
                    else
                    {
                        <span>@Model.CompanyTripBookingState.Name</span>
                    }
                </dd>
                
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.MembersDiscount):</dt>
                <dd class="col-sm-8 mb-1">@Model.MembersDiscount</dd>
            
            </dl>
        </div>
        
        <div class="col-xl-5 col-12">
            <dl class="row mb-0">
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.Account):</dt>
                <dd class="col-sm-8 mb-1">@Model.Account.User.Name</dd>
                
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.Price):</dt>
                <dd class="col-sm-8 mb-1">@Model.Price</dd>
                
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.MembersCount):</dt>
                <dd class="col-sm-8 mb-1">@Model.MembersCount</dd>
                
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.Date):</dt>
                <dd class="col-sm-8 mb-1">@Model.Date</dd>
            </dl>
        </div>
       
    </div>
                <div class="card-body">
                <div class="d-flex justify-content-between align-items-start">
                    <span class="badge bg-success">@Html.DisplayNameFor(model => model.Notes) </span>
                </div>
                <br />
        @if (!string.IsNullOrEmpty(Model.Notes))
        {
            @Html.Raw(Model.Notes)
        }
        else
        {
                    <p>@Localizer.Get("Not Found")</p>
        }

            </div>

    <hr />
    <div class="row">
        <div class="col-xl-7 col-12">
            <dl class="row mb-0">

             
                <dt class="col-sm-4 fw-bolder mb-1">@Html.DisplayNameFor(model => model.CreatedAt):</dt>
                <dd class="col-sm-8 mb-1">@Model.CreatedAt</dd>
            </dl>
        </div>
    
    </div>


</div>

