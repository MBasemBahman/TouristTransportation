<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bad Request!" xml:space="preserve">
    <value>Bad Request!</value>
  </data>
  <data name="Can't be deleted,employee assigned to some projects!" xml:space="preserve">
    <value>Can't be deleted,employee assigned to some projects!</value>
  </data>
  <data name="Can't be deleted,employee assigned to some tasks!" xml:space="preserve">
    <value>Can't be deleted,employee assigned to some tasks!</value>
  </data>
  <data name="Can't be deleted,there are some categories in this workPlace!" xml:space="preserve">
    <value>Can't be deleted,there are some categories in this workPlace!</value>
  </data>
  <data name="Can't be deleted,there are some departments in this workPlace!" xml:space="preserve">
    <value>Can't be deleted,there are some departments in this workPlace!</value>
  </data>
  <data name="Can't be deleted,there are some Employees in this department!" xml:space="preserve">
    <value>Can't be deleted,there are some Employees in this department!</value>
  </data>
  <data name="Can't be deleted,there are some Employees in this Position!" xml:space="preserve">
    <value>Can't be deleted,there are some Employees in this Position!</value>
  </data>
  <data name="Can't be deleted,there are some Employees in this workPlace!" xml:space="preserve">
    <value>Can't be deleted,there are some Employees in this workPlace!</value>
  </data>
  <data name="Can't be deleted,there are some low work in this department!" xml:space="preserve">
    <value>Can't be deleted,there are some low work in this department!</value>
  </data>
  <data name="Can't be deleted,there are some Low Work in this Position!" xml:space="preserve">
    <value>Can't be deleted,there are some Low Work in this Position!</value>
  </data>
  <data name="Can't be deleted,there are some positions in this workPlace!" xml:space="preserve">
    <value>Can't be deleted,there are some positions in this workPlace!</value>
  </data>
  <data name="Can't be deleted,there are some priorities in this workPlace!" xml:space="preserve">
    <value>Can't be deleted,there are some priorities in this workPlace!</value>
  </data>
  <data name="Can't be deleted,there are some priority tasks!" xml:space="preserve">
    <value>Can't be deleted,there are some priority tasks!</value>
  </data>
  <data name="Can't be deleted,there are some project States in this workPlace!" xml:space="preserve">
    <value>Can't be deleted,there are some project States in this workPlace!</value>
  </data>
  <data name="Can't be deleted,there are some projects in this category!" xml:space="preserve">
    <value>Can't be deleted,there are some projects in this category!</value>
  </data>
  <data name="Can't be deleted,there are some projects in this workPlace!" xml:space="preserve">
    <value>Can't be deleted,there are some projects in this workPlace!</value>
  </data>
  <data name="Can't be deleted,there are some task states in this workPlace!" xml:space="preserve">
    <value>Can't be deleted,there are some task states in this workPlace!</value>
  </data>
  <data name="Can't be deleted,there are some tasks in this workplace!" xml:space="preserve">
    <value>Can't be deleted,there are some tasks in this workplace!</value>
  </data>
  <data name="Can't create practices in past time!" xml:space="preserve">
    <value>Can't create practices in past time!</value>
  </data>
  <data name="Can't Edit" xml:space="preserve">
    <value>Can't Edit</value>
  </data>
  <data name="Email address not valid!" xml:space="preserve">
    <value>Email address not valid!</value>
  </data>
  <data name="Employee Already Added" xml:space="preserve">
    <value>Employee Already Added</value>
  </data>
  <data name="Invalid code!" xml:space="preserve">
    <value>Invalid code!</value>
  </data>
  <data name="Login expired, please login again!" xml:space="preserve">
    <value>Login expired, please login again!</value>
  </data>
  <data name="login failed. Wrong user name or password." xml:space="preserve">
    <value>login failed. Wrong user name or password.</value>
  </data>
  <data name="Not Allowed" xml:space="preserve">
    <value>Not Allowed</value>
  </data>
  <data name="Not Allowed!" xml:space="preserve">
    <value>Not Allowed!</value>
  </data>
  <data name="Not Auth!" xml:space="preserve">
    <value>Not Allowed!</value>
  </data>
  <data name="Not Found!" xml:space="preserve">
    <value>Not Found!</value>
  </data>
  <data name="Old password is wrong!" xml:space="preserve">
    <value>Old password is wrong!</value>
  </data>
  <data name="Please add meeting participates!" xml:space="preserve">
    <value>Please add meeting participates!</value>
  </data>
  <data name="Please fill comment content!" xml:space="preserve">
    <value>Please fill comment content!</value>
  </data>
  <data name="Please fill message content!" xml:space="preserve">
    <value>Please fill message content!</value>
  </data>
  <data name="Please fill post content!" xml:space="preserve">
    <value>Please fill post content!</value>
  </data>
  <data name="Practices less than the slot of duration!" xml:space="preserve">
    <value>Practices less than the slot of duration!</value>
  </data>
  <data name="Something error, please try again!" xml:space="preserve">
    <value>Something error, please try again!</value>
  </data>
  <data name="The meeting did not start yet!" xml:space="preserve">
    <value>The meeting did not start yet!</value>
  </data>
  <data name="The meeting not valid!" xml:space="preserve">
    <value>The meeting not valid!</value>
  </data>
  <data name="The start time must be before the end time!" xml:space="preserve">
    <value>The start time must be before the end time!</value>
  </data>
  <data name="There are already dates created within the given period" xml:space="preserve">
    <value>There are already dates created within the given period</value>
  </data>
  <data name="User name already registered" xml:space="preserve">
    <value>User name already registered</value>
  </data>
  <data name="user not found" xml:space="preserve">
    <value>user not found</value>
  </data>
  <data name="You can't join the meeting!" xml:space="preserve">
    <value>You can't join the meeting!</value>
  </data>
  <data name="You must add at aleast two members to chat!" xml:space="preserve">
    <value>You must add at aleast two members to chat!</value>
  </data>
  <data name="You must add chat name!" xml:space="preserve">
    <value>You must add chat name!</value>
  </data>
  <data name="You must add members to Group!" xml:space="preserve">
    <value>You must add members to Group!</value>
  </data>
</root>